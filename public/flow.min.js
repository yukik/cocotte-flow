!function n(r,o,t){function e(i,f){if(!o[i]){if(!r[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var l=o[i]={exports:{}};r[i][0].call(l.exports,function(n){var o=r[i][1][n];return e(o?o:n)},l,l.exports,n,r,o,t)}return o[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)e(t[i]);return e}({1:[function(n,r,o){function t(n){function r(n,t){var e=n?o["throw"](n):o.next(t);e.done||(u(e.value)?e.value(function(n,o){r(n,o)}):i(e.value)?f(e.value,r):r(new Error("yield not-thunk")))}if(!e(n))throw new Error("flow only supports a generator function");var o=n();r()}function e(n){return n&&n.constructor&&"GeneratorFunction"===n.constructor.name}function u(n){return"function"==typeof n}function i(n){return Array.isArray(n)&&n.length&&n.every(function(n){return u(n)})}function f(n,r){function o(n,o,i){u||(u=u||o,e[n]=i,t--,(o||0===t)&&r(o,o?null:e))}var t=n.length,e=new Array(t),u=null;n.forEach(function(n,r){n(function(n,t){o(r,n,t)})})}/*
 * @license
 * cocotte-flow v0.1.0
 * Copyright(c) 2015 Yuki Kurata <yuki.kurata@gmail.com>
 * MIT Licensed
 */
r.exports=t,"object"==typeof window&&(window.Cocotte||(window.Cocotte={}),window.Cocotte.flow=t)},{}]},{},[1]);